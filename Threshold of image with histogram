#include <iostream>
#include <opencv/cv.h>
#include <opencv/highgui.h>
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include "opencv2/imgproc/imgproc.hpp"
using namespace std;
using namespace cv;

int main()
{
    Mat src;
    Mat dst;



    src = imread("C:\\Users\\martin\\Desktop\\ThermalImage.png", CV_LOAD_IMAGE_GRAYSCALE); //Load an image from directory path

 imshow("thresholdedPicture", src);
    if (! src.data){
         cout <<  "Could not open or find the image" << std::endl ; // Look for invalid input
        return -1;
    }




    else{

    cout << src.cols << src.rows << endl;
    double thresh = 130;  // Threshold
    double maxValue = 255; // Value assigned to the pixel if it is over 'thresh'

    threshold(src, dst, thresh, maxValue, THRESH_BINARY); // threshold the picture src and call it dst

    namedWindow("thresholdedPicture", WINDOW_AUTOSIZE); // Create a window

    imshow("thresholdedPicture", dst); // display thresholded picture in the window
    waitKey(0);

    cout << "hello" << endl;
    }

    // Parameters for the histogram
    int histSize = 256;  //Size of the histogram
    float range[] = {0, 255}; // Range between 0 - 255
    const float *range[] = {range};
    
    // Calculation of the histogram
    
    MatND hist;
    calcHist(&gray, 1, 0, Mat(), hist, 1, &histSize, ranges, true, false);

    // Show the calculated histogram
    
    
    

    return 0;


}
